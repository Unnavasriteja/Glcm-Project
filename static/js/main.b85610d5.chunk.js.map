{"version":3,"sources":["component/GlemArray.js","component/SetMatrix.js","component/Properties.js","App.js","reportWebVitals.js","index.js"],"names":["GlcmArray","params","useState","forceUpdate","setForceUpdate","matrix","degree","i","Matrix","length","j","distance","col","row","undefined","assign","initColour","ii","innerInputColour","jj","push","inputColour","setInputColour","w","q","GlcmColour","findColoured","id","onClick","arr","setGlcmColour","assign0ToOutputColour","array","innerColourGlcm","assign0ToInputColour","className","style","map","item","index","innerItem","innerIndex","inner","qq","string","bgcolor","newColourMatrix","hexValues","hex","Math","floor","random","Colour","SetMatrix","htmlFor","type","value","rows","onChange","changerows","for","cols","changecols","Button","Create","Properties","toret","upto","console","log","min","max","step","dots","marks","setDegree","setDistance","App","setRows","setCols","innerColour","MatrixArray","Array","Random","setRandom","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b85610d5.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nvar GlcmArray=(params)=>{\r\n    var [MatrixArray,setMatrixArray]=useState( [ \r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0],\r\n        [0,0,0,0,0,0,0,0]\r\n    ]);\r\n    var [forceUpdate,setForceUpdate]=useState(0);\r\n    var assign0=()=>{\r\n        GlcmArray= [ \r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0],\r\n            [0,0,0,0,0,0,0,0]\r\n        ]\r\n    }\r\n   \r\n\r\n    var Colour=(index,innerIndex)=>{\r\n        let newColourMatrix=params.GlcmColour;\r\n        const hexValues = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\r\n        let hex = '#';\r\n        for(let i = 0; i < 6; i++){\r\n            const index = Math.floor(Math.random() * hexValues.length)\r\n            hex += hexValues[index];\r\n        }\r\n        \r\n        setForceUpdate(forceUpdate===hex?\"\":hex);\r\n        newColourMatrix[index][innerIndex]=newColourMatrix[index][innerIndex]===\"#FFFFFF\"?hex:\"#FFFFFF\";\r\n        params.setGlcmColour(newColourMatrix);\r\n    }\r\n\r\n    var assign=(matrix)=>{\r\n        var i,j,col,row;\r\n        if(params)\r\n            if(params.degree===0){\r\n                for(i=0;i<params.Matrix.length;i++)\r\n                    for(j=0;j<params.Matrix[i].length-params.distance+1;j++){\r\n                        col=params.Matrix[i][j];\r\n                        row=params.Matrix[i][j+params.distance-1];\r\n                        if(col!==undefined)\r\n                            matrix[row-1][col-1]+=1;\r\n                    }\r\n            }\r\n            else if(params.degree===90)\r\n                for(var i=0;i<params.Matrix.length-params.distance+1;i++){\r\n                    for(var j=0;j<params.Matrix[i].length;j++){\r\n                        var col=params.Matrix[i][j];\r\n                        var row=params.Matrix[i+params.distance-1][j];\r\n                        if(row!==undefined)\r\n                            matrix[row-1][col-1]+=1;\r\n                    }\r\n                }\r\n            else if(params.degree===45){\r\n                for(i=params.distance-1;i<params.Matrix.length;i++)\r\n                    for(j=0;j<params.Matrix[i].length-params.distance+1;j++){\r\n                        col=params.Matrix[i-params.distance+1][j+params.distance-1];\r\n                        row=params.Matrix[i][j];\r\n                        if(col!==undefined)\r\n                            matrix[row-1][col-1]+=1;\r\n                    }\r\n            }\r\n            else if(params.degree===135){\r\n                for(i=0;i<params.Matrix.length-params.distance+1;i++)\r\n                    for(j=0;j<params.Matrix[i].length-params.distance+1;j++){\r\n                        col=params.Matrix[i][j];\r\n                        row=params.Matrix[i+params.distance-1][j+params.distance-1];\r\n                        if(col!==undefined)\r\n                            matrix[row-1][col-1]+=1;\r\n                    }\r\n            }\r\n    }\r\n    assign0();\r\n    assign(GlcmArray);\r\n    \r\n    var initColour=[]\r\n    for(var ii=0;ii<params.Matrix.length;ii++){\r\n        let innerInputColour=[]\r\n        for(var jj=0;jj<params.Matrix[ii].length;jj++){\r\n            innerInputColour.push(\"#FFFFFF\");\r\n        }\r\n        initColour.push(innerInputColour);\r\n    }\r\n    var [inputColour, setInputColour]=useState(initColour)\r\n    var findColoured=()=>{\r\n        var w,q;\r\n        for(var i=0;i<8;i++){\r\n            for(var j=0;j<8;j++){\r\n                if(params.GlcmColour[i][j]!==\"#FFFFFF\"){\r\n                    if(params.degree===0){\r\n                        for(q=0;q<params.Matrix.length;q++){\r\n                            for(w=0;w<params.Matrix[q].length-params.distance+1;w++){\r\n                                if(params.Matrix[q][w]===j+1&&params.Matrix[q][w+params.distance-1]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q][w+params.distance-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degree===90){\r\n                        for(q=0;q<params.Matrix.length-params.distance+1;q++){\r\n                            for(w=0;w<params.Matrix[q].length;w++){\r\n                                if(params.Matrix[q][w]===j+1&&params.Matrix[q+params.distance-1][w]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q+params.distance-1][w]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degree===45){\r\n                        for(q=params.distance-1;q<params.Matrix.length;q++){\r\n                            for(w=0;w<params.Matrix[q].length-params.distance+1;w++){\r\n                                if(params.Matrix[q][w]===i+1&&params.Matrix[q-params.distance+1][w+params.distance-1]===j+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q-params.distance+1][w+params.distance-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(params.degree===135){\r\n                        for(q=0;q<params.Matrix.length-params.distance+1;q++){\r\n                            for(w=0;w<params.Matrix[q].length-params.distance+1;w++){\r\n                                if(params.Matrix[q][w]===j+1&&params.Matrix[q+params.distance-1][w+params.distance-1]===i+1){\r\n                                    inputColour[q][w]=params.GlcmColour[i][j];\r\n                                    inputColour[q+params.distance-1][w+params.distance-1]=params.GlcmColour[i][j];                                    \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findColoured()\r\n\r\n    var assign0ToInputColour=(array)=>{\r\n        for(var ii=0;ii<array.length;ii++){\r\n            let innerColourGlcm=[]\r\n            for(var jj=0;jj<array[ii].length;jj++)\r\n                innerColourGlcm.push(`#FFFFFF`)\r\n            array[ii]=innerColourGlcm;\r\n        }\r\n        setInputColour(array);\r\n    }\r\n\r\n    var assign0ToOutputColour=()=>{\r\n        let arr=params.GlcmColour;\r\n        for(var i=0;i<arr.length;i++)\r\n            for(var j=0;j<arr[i].length;j++)\r\n                arr[i][j]=\"#FFFFFF\"\r\n        params.setGlcmColour(arr);\r\n    }\r\n\r\n    var clearColour=()=>{\r\n        assign0ToOutputColour();\r\n        assign0ToInputColour(inputColour);\r\n        setForceUpdate(forceUpdate+\"_\")\r\n\r\n    }\r\n\r\n    return(\r\n        <div id=\"input\">\r\n            <div>\r\n                <div>\r\n                    <button onClick={clearColour} className=\"btn btn-success align-self-start\">Clear Colours</button>\r\n                </div>\r\n                \r\n            <table style={{'margin':'20px'}}>\r\n                <tbody>\r\n                    {params.Matrix.map((item,index)=>{\r\n                        return(\r\n                            <tr key={index}>\r\n                                {item.map((innerItem,innerIndex)=>{\r\n                                    if (inputColour[index]===undefined){\r\n                                        let inner = []\r\n                                        for (var qq=0; qq<innerItem.length;qq++)\r\n                                            inner.push(\"#FFFFFF\")\r\n                                        inputColour.push(inner)\r\n                                    }\r\n                                    var string=index+\"_\"+innerIndex\r\n                                    return(\r\n                                        <td key={string} \r\n                                            bgcolor={inputColour[index][innerIndex]}\r\n                                            style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\r\n                                        >\r\n                                            {innerItem}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            <div>\r\n                <table style={{'margin':'20px'}}>\r\n                    <tbody>\r\n                        <tr key=\"column_number\">\r\n                            {\r\n                                GlcmArray[0].map((item,index)=>\r\n                                    <td key={index} style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\r\n                                )\r\n                            }\r\n                        </tr>\r\n                        {GlcmArray.map((item,index)=>{\r\n                            return( \r\n                                <tr key={index}>\r\n                                    {item.map((innerItem,innerIndex)=>{\r\n                                        var string=index+\"_\"+innerIndex\r\n                                        return(\r\n                                            <td key={string} \r\n                                                style={{\"borderWidth\":\"2px\", 'borderColor':\"#000000\", 'borderStyle':'solid','padding':'10px','margin':'0px'}}\r\n                                                bgcolor={params.GlcmColour[index][innerIndex]}\r\n                                                onClick={()=>Colour(index,innerIndex)}\r\n                                            >\r\n                                                {innerItem}\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                                    <td key=\"row_number\" style={{'padding':'10px','margin':'0px'}}>{index+1}</td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>    )\r\n}\r\n\r\nexport default GlcmArray;","import Button from 'react-bootstrap/Button';\r\nvar SetMatrix = params=>{\r\n    return(\r\n        <div>\r\n            <h1 >React GLCM web application</h1>\r\n            <h2 >Create a matrix</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 m-2 p-2\">\r\n                    <label htmlFor=\"rows\">Rows:&nbsp;</label>\r\n                    <input type=\"text\" id=\"rows\"  value={params.rows} onChange={params.changerows}/>\r\n                </div>\r\n                <div className=\"col-md-4 m-2 p-2\">\r\n                    <label for=\"col\">Columns:&nbsp;</label>\r\n                    <input type=\"text\" id=\"cols\" value={params.cols} onChange={params.changecols}/>\r\n                </div>\r\n                <div className=\"col-md-2 m-2 p-2\">\r\n                    <Button onClick={()=> params.Create()}>Genetate Matrix</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetMatrix;","import Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nvar Properties=params=>{\r\n    let toret=[]\r\n    var upto=params.degree===0?params.cols:\r\n            params.degree===90?params.rows:\r\n            params.cols>params.rows?params.rows:params.cols\r\n    for(var i=2;i<=upto;i++)\r\n        toret[i]=i;\r\n    console.log(toret)\r\n    return(\r\n       <div className=\"row\"> \r\n            <div className=\"col-md-5\" style={{\"margin\":\"20px\",\"padding\":\"20px\"}}>\r\n                <Slider min={0} max={135} step={45} dots={true} marks={{ 0: 0, 45: 45, 90: 90, 135:135 }} onChange={params.setDegree}/>\r\n            </div>\r\n            <div className=\"col-md-5\" style={{\"margin\":\"20px\",\"padding\":\"20px\"}}>\r\n                <Slider \r\n                    min={2}\r\n                    max={\r\n                        params.degree===0?params.cols:\r\n                        params.degree===90?params.rows:\r\n                        params.cols>params.rows?params.rows:params.cols\r\n                    } \r\n                    step={1} dots={true} marks={toret} onChange={params.setDistance}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Properties;","import './App.css';\nimport GlcmArray from './component/GlemArray';\nimport React, {useState} from 'react';\nimport SetMatrix from './component/SetMatrix';\nimport Properties from './component/Properties';\n\nfunction App() {\n  var [rows, setRows]=useState(6)\n  var [cols, setCols]=useState(7)\n  \n  var [degree, setDegree] = useState(0)\n  var [distance, setDistance] = useState(2)\n  \n  let Colour=[]\n  for(var ii=0;ii<8;ii++){\n      let innerColour=[]\n      for(var jj=0;jj<8;jj++)\n          innerColour.push(`#FFFFFF`)\n      Colour.push(innerColour);\n  }\n  var [GlcmColour,setGlcmColour]=useState(Colour);\n    var Matrix=()=>{\n    var MatrixArray = []\n    for (var i=0; i<rows; i++){\n      var Array=[]\n      for (var j=0; j<cols; j++)\n        Array.push(Math.floor(Math.random() * 8) + 1); \n      MatrixArray.push(Array)\n    }\n        return MatrixArray;\n             \n  }\n  var [Random,setRandom]=useState(Matrix())\n  var Create=()=>{\n    setRandom(Matrix())\n  }\n  var changecols=(event)=>{\n    setCols(event.target.value===undefined?3:event.target.value<3?3:event.target.value)\n  }\n  \n  var changerows=(event)=>{\n    setRows(event.target.value===undefined?3:event.target.value<3?3:event.target.value)\n  }\n  return (\n    <div className=\"App\">\n      <SetMatrix Create={Create} rows={rows} cols={cols} changerows={changerows} changecols={changecols}/>\n      <Properties degree={degree} setDegree={setDegree} distance={distance} setDistance={setDistance} rows={rows} cols={cols}/>\n      <GlcmArray Matrix={Random} degree={degree} distance={distance} GlcmColour={GlcmColour} setGlcmColour={setGlcmColour}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}